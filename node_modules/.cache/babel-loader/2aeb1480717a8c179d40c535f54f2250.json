{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _slicedToArray = require(\"/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _asyncToGenerator = require(\"/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\n\nvar CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\n\nvar ColorUtils_1 = require(\"../Utils/ColorUtils\");\n\nvar Constants_1 = require(\"./Utils/Constants\");\n\nvar Utils_1 = require(\"../Utils/Utils\");\n\nvar Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    _classCallCheck(this, Canvas);\n\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  _createClass(Canvas, [{\n    key: \"init\",\n    value: function init() {\n      this.resize();\n      this.initStyle();\n      this.initCover();\n      this.initTrail();\n      this.initBackground();\n      this.paint();\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.generatedCanvas = canvas.dataset && Constants_1.Constants.generatedAttribute in canvas.dataset ? canvas.dataset[Constants_1.Constants.generatedAttribute] === \"true\" : this.generatedCanvas;\n      this.element = canvas;\n      this.originalStyle = (0, Utils_1.deepExtend)({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this.context = this.element.getContext(\"2d\");\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this = this;\n\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.clear)(ctx, _this.size);\n      });\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this2 = this;\n\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          (0, CanvasUtils_1.clear)(ctx, _this2.size);\n\n          _this2.paintBase(_this2.coverColorStyle);\n        } else {\n          _this2.paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this3 = this;\n\n      var options = this.container.actualOptions,\n          trail = options.particles.move.trail;\n\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n        this.paintBase((0, ColorUtils_1.getStyleFromRgb)(this.trailFillColor, 1 / trail.length));\n      } else {\n        this.draw(function (ctx) {\n          (0, CanvasUtils_1.clear)(ctx, _this3.size);\n        });\n      }\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var container, needsRefresh, _iterator, _step, _step$value, plugin;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.element) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                this.resize();\n                container = this.container, needsRefresh = container.updateActualOptions();\n                container.particles.setDensity();\n                _iterator = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    _step$value = _slicedToArray(_step.value, 2), plugin = _step$value[1];\n\n                    if (plugin.resize !== undefined) {\n                      plugin.resize();\n                    }\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                if (!needsRefresh) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 10;\n                return container.refresh();\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n\n      return windowResize;\n    }()\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n\n      var container = this.container,\n          pxRatio = container.retina.pixelRatio,\n          size = container.canvas.size,\n          newSize = {\n        width: this.element.offsetWidth * pxRatio,\n        height: this.element.offsetHeight * pxRatio\n      };\n\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return;\n      }\n\n      var oldSize = Object.assign({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"drawConnectLine\",\n    value: function drawConnectLine(p1, p2) {\n      var _this4 = this;\n\n      this.draw(function (ctx) {\n        var _a;\n\n        var lineStyle = _this4.lineStyle(p1, p2);\n\n        if (!lineStyle) {\n          return;\n        }\n\n        var pos1 = p1.getPosition(),\n            pos2 = p2.getPosition();\n        (0, CanvasUtils_1.drawConnectLine)(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : _this4.container.retina.linksWidth, lineStyle, pos1, pos2);\n      });\n    }\n  }, {\n    key: \"drawGrabLine\",\n    value: function drawGrabLine(particle, lineColor, opacity, mousePos) {\n      var container = this.container;\n      this.draw(function (ctx) {\n        var _a;\n\n        var beginPos = particle.getPosition();\n        (0, CanvasUtils_1.drawGrabLine)(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n      });\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this5 = this;\n\n      var _a, _b, _c, _d, _e, _f;\n\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n\n      var radius = particle.getRadius();\n\n      if (radius <= 0) {\n        return;\n      }\n\n      var pfColor = particle.getFillColor(),\n          psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n\n      if (!pfColor && !psColor) {\n        return;\n      }\n\n      var _this$getPluginPartic = this.getPluginParticleColors(particle),\n          _this$getPluginPartic2 = _slicedToArray(_this$getPluginPartic, 2),\n          fColor = _this$getPluginPartic2[0],\n          sColor = _this$getPluginPartic2[1];\n\n      if (!fColor || !sColor) {\n        if (!fColor) {\n          fColor = pfColor ? pfColor : undefined;\n        }\n\n        if (!sColor) {\n          sColor = psColor ? psColor : undefined;\n        }\n      }\n\n      var options = this.container.actualOptions,\n          zIndexOptions = particle.options.zIndex,\n          zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n          opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1,\n          strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity,\n          zOpacity = opacity * zOpacityFactor,\n          zStrokeOpacity = strokeOpacity * zOpacityFactor;\n      var colorStyles = {\n        fill: fColor ? (0, ColorUtils_1.getStyleFromHsl)(fColor, zOpacity) : undefined\n      };\n      colorStyles.stroke = sColor ? (0, ColorUtils_1.getStyleFromHsl)(sColor, zStrokeOpacity) : colorStyles.fill;\n      this.draw(function (ctx) {\n        var zSizeFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n            container = _this5.container;\n\n        var _iterator2 = _createForOfIteratorHelper(container.particles.updaters),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var updater = _step2.value;\n\n            if (updater.beforeDraw) {\n              updater.beforeDraw(particle);\n            }\n\n            if (updater.getColorStyles) {\n              var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n                  fill = _updater$getColorStyl.fill,\n                  stroke = _updater$getColorStyl.stroke;\n\n              if (fill) {\n                colorStyles.fill = fill;\n              }\n\n              if (stroke) {\n                colorStyles.stroke = stroke;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        (0, CanvasUtils_1.drawParticle)(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n\n        var _iterator3 = _createForOfIteratorHelper(container.particles.updaters),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _updater = _step3.value;\n\n            if (_updater.afterDraw) {\n              _updater.afterDraw(particle);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.drawPlugin)(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.drawParticlePlugin)(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n          background = options.background,\n          element = this.element,\n          elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n      if (!elementStyle) {\n        return;\n      }\n\n      if (background.color) {\n        var color = (0, ColorUtils_1.colorToRgb)(background.color);\n        elementStyle.backgroundColor = color ? (0, ColorUtils_1.getStyleFromRgb)(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      if (!this.context) {\n        return;\n      }\n\n      return cb(this.context);\n    }\n  }, {\n    key: \"initCover\",\n    value: function initCover() {\n      var options = this.container.actualOptions,\n          cover = options.backgroundMask.cover,\n          color = cover.color,\n          coverRgb = (0, ColorUtils_1.colorToRgb)(color);\n\n      if (coverRgb) {\n        var coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n        this.coverColorStyle = (0, ColorUtils_1.getStyleFromRgb)(coverColor, coverColor.a);\n      }\n    }\n  }, {\n    key: \"initTrail\",\n    value: function initTrail() {\n      var options = this.container.actualOptions,\n          trail = options.particles.move.trail,\n          fillColor = (0, ColorUtils_1.colorToRgb)(trail.fillColor);\n\n      if (fillColor) {\n        var _trail = options.particles.move.trail;\n        this.trailFillColor = {\n          r: fillColor.r,\n          g: fillColor.g,\n          b: fillColor.b,\n          a: 1 / _trail.length\n        };\n      }\n    }\n  }, {\n    key: \"getPluginParticleColors\",\n    value: function getPluginParticleColors(particle) {\n      var fColor, sColor;\n\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              plugin = _step4$value[1];\n\n          if (!fColor && plugin.particleFillColor) {\n            fColor = (0, ColorUtils_1.colorToHsl)(plugin.particleFillColor(particle));\n          }\n\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = (0, ColorUtils_1.colorToHsl)(plugin.particleStrokeColor(particle));\n          }\n\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"initStyle\",\n    value: function initStyle() {\n      var element = this.element,\n          options = this.container.actualOptions;\n\n      if (!element) {\n        return;\n      }\n\n      var originalStyle = this.originalStyle;\n\n      if (options.fullScreen.enable) {\n        this.originalStyle = (0, Utils_1.deepExtend)({}, element.style);\n        element.style.setProperty(\"position\", \"fixed\", \"important\");\n        element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n        element.style.setProperty(\"top\", \"0\", \"important\");\n        element.style.setProperty(\"left\", \"0\", \"important\");\n        element.style.setProperty(\"width\", \"100%\", \"important\");\n        element.style.setProperty(\"height\", \"100%\", \"important\");\n      } else if (originalStyle) {\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n      }\n\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n\n        var value = options.style[key];\n\n        if (!value) {\n          continue;\n        }\n\n        element.style.setProperty(key, value, \"important\");\n      }\n    }\n  }, {\n    key: \"paintBase\",\n    value: function paintBase(baseColor) {\n      var _this6 = this;\n\n      this.draw(function (ctx) {\n        (0, CanvasUtils_1.paintBase)(ctx, _this6.size, baseColor);\n      });\n    }\n  }, {\n    key: \"lineStyle\",\n    value: function lineStyle(p1, p2) {\n      var _this7 = this;\n\n      return this.draw(function (ctx) {\n        var options = _this7.container.actualOptions,\n            connectOptions = options.interactivity.modes.connect;\n        return (0, CanvasUtils_1.gradient)(ctx, p1, p2, connectOptions.links.opacity);\n      });\n    }\n  }]);\n\n  return Canvas;\n}();\n\nexports.Canvas = Canvas;","map":{"version":3,"names":["Object","defineProperty","exports","value","Canvas","CanvasUtils_1","require","ColorUtils_1","Constants_1","Utils_1","container","size","height","width","context","generatedCanvas","resize","initStyle","initCover","initTrail","initBackground","paint","canvas","_a","element","remove","dataset","Constants","generatedAttribute","originalStyle","deepExtend","style","offsetHeight","offsetWidth","getContext","retina","init","draw","ctx","clear","options","actualOptions","backgroundMask","enable","cover","paintBase","coverColorStyle","trail","particles","move","length","trailFillColor","getStyleFromRgb","needsRefresh","updateActualOptions","setDensity","plugins","plugin","undefined","refresh","pxRatio","pixelRatio","newSize","oldSize","assign","started","resizeFactor","p1","p2","lineStyle","pos1","getPosition","pos2","drawConnectLine","linksWidth","particle","lineColor","opacity","mousePos","beginPos","drawGrabLine","delta","_b","_c","_d","_e","_f","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","getPluginParticleColors","fColor","sColor","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","bubble","strokeOpacity","stroke","zOpacity","zStrokeOpacity","colorStyles","fill","getStyleFromHsl","zSizeFactor","sizeRate","updaters","updater","beforeDraw","getColorStyles","drawParticle","composite","shadow","afterDraw","drawPlugin","drawParticlePlugin","background","elementStyle","color","colorToRgb","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","cb","coverRgb","coverColor","r","g","b","a","fillColor","particleFillColor","colorToHsl","particleStrokeColor","fullScreen","setProperty","toString","top","left","key","baseColor","connectOptions","interactivity","modes","connect","gradient","links"],"sources":["/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/tsparticles/cjs/Core/Canvas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nconst ColorUtils_1 = require(\"../Utils/ColorUtils\");\nconst Constants_1 = require(\"./Utils/Constants\");\nconst Utils_1 = require(\"../Utils/Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && Constants_1.Constants.generatedAttribute in canvas.dataset\n                ? canvas.dataset[Constants_1.Constants.generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = (0, Utils_1.deepExtend)({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.clear)(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                (0, CanvasUtils_1.clear)(ctx, this.size);\n                this.paintBase(this.coverColorStyle);\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase((0, ColorUtils_1.getStyleFromRgb)(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                (0, CanvasUtils_1.clear)(ctx, this.size);\n            });\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.draw((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            (0, CanvasUtils_1.drawConnectLine)(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.draw((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            (0, CanvasUtils_1.drawGrabLine)(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        if (!fColor || !sColor) {\n            if (!fColor) {\n                fColor = pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1, strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor;\n        const colorStyles = {\n            fill: fColor ? (0, ColorUtils_1.getStyleFromHsl)(fColor, zOpacity) : undefined,\n        };\n        colorStyles.stroke = sColor ? (0, ColorUtils_1.getStyleFromHsl)(sColor, zStrokeOpacity) : colorStyles.fill;\n        this.draw((ctx) => {\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate, container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n            }\n            (0, CanvasUtils_1.drawParticle)(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.drawPlugin)(ctx, plugin, delta);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.drawParticlePlugin)(ctx, plugin, particle, delta);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = (0, ColorUtils_1.colorToRgb)(background.color);\n            elementStyle.backgroundColor = color ? (0, ColorUtils_1.getStyleFromRgb)(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    draw(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n    initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = (0, ColorUtils_1.colorToRgb)(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this.coverColorStyle = (0, ColorUtils_1.getStyleFromRgb)(coverColor, coverColor.a);\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = (0, ColorUtils_1.colorToRgb)(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = (0, ColorUtils_1.colorToHsl)(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = (0, ColorUtils_1.colorToHsl)(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = (0, Utils_1.deepExtend)({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            (0, CanvasUtils_1.paintBase)(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.draw((ctx) => {\n            const options = this.container.actualOptions, connectOptions = options.interactivity.modes.connect;\n            return (0, CanvasUtils_1.gradient)(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n}\nexports.Canvas = Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}