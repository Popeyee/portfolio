{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RollUpdater = void 0;\n\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\n\nvar NumberUtils_1 = require(\"../../Utils/NumberUtils\");\n\nfunction updateRoll(particle, delta) {\n  var roll = particle.options.roll;\n\n  if (!particle.roll || !roll.enable) {\n    return;\n  }\n\n  var speed = particle.roll.speed * delta.factor;\n  var max = 2 * Math.PI;\n  particle.roll.angle += speed;\n\n  if (particle.roll.angle > max) {\n    particle.roll.angle -= max;\n  }\n}\n\nvar RollUpdater = /*#__PURE__*/function () {\n  function RollUpdater() {\n    _classCallCheck(this, RollUpdater);\n  }\n\n  _createClass(RollUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var rollOpt = particle.options.roll;\n\n      if (rollOpt.enable) {\n        particle.roll = {\n          angle: Math.random() * Math.PI * 2,\n          speed: (0, NumberUtils_1.getRangeValue)(rollOpt.speed) / 360\n        };\n\n        if (rollOpt.backColor) {\n          particle.backColor = (0, ColorUtils_1.colorToHsl)(rollOpt.backColor);\n        } else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n          var alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n          particle.roll.alter = {\n            type: alterType,\n            value: (0, NumberUtils_1.getRangeValue)(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value)\n          };\n        } else if (rollOpt.darken.enable) {\n          particle.roll.alter = {\n            type: \"darken\",\n            value: (0, NumberUtils_1.getRangeValue)(rollOpt.darken.value)\n          };\n        } else if (rollOpt.enlighten.enable) {\n          particle.roll.alter = {\n            type: \"enlighten\",\n            value: (0, NumberUtils_1.getRangeValue)(rollOpt.enlighten.value)\n          };\n        }\n      } else {\n        particle.roll = {\n          angle: 0,\n          speed: 0\n        };\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var roll = particle.options.roll;\n      return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateRoll(particle, delta);\n    }\n  }]);\n\n  return RollUpdater;\n}();\n\nexports.RollUpdater = RollUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","RollUpdater","ColorUtils_1","require","NumberUtils_1","updateRoll","particle","delta","roll","options","enable","speed","factor","max","Math","PI","angle","rollOpt","random","getRangeValue","backColor","colorToHsl","darken","enlighten","alterType","alter","type","destroyed","spawning","isEnabled"],"sources":["/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/tsparticles/cjs/Updaters/Roll/RollUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RollUpdater = void 0;\nconst ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !roll.enable) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor;\n    const max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nclass RollUpdater {\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt.enable) {\n            particle.roll = {\n                angle: Math.random() * Math.PI * 2,\n                speed: (0, NumberUtils_1.getRangeValue)(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = (0, ColorUtils_1.colorToHsl)(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: (0, NumberUtils_1.getRangeValue)(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: (0, NumberUtils_1.getRangeValue)(rollOpt.darken.value),\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: (0, NumberUtils_1.getRangeValue)(rollOpt.enlighten.value),\n                };\n            }\n        }\n        else {\n            particle.roll = { angle: 0, speed: 0 };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\nexports.RollUpdater = RollUpdater;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}