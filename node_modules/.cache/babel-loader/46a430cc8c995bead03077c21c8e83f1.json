{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbsorberInstance = void 0;\n\nvar NumberUtils_1 = require(\"../../Utils/NumberUtils\");\n\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\n\nvar Absorber_1 = require(\"./Options/Classes/Absorber\");\n\nvar Vector_1 = require(\"../../Core/Utils/Vector\");\n\nvar Utils_1 = require(\"../../Utils/Utils\");\n\nvar AbsorberInstance = /*#__PURE__*/function () {\n  function AbsorberInstance(absorbers, container, options, position) {\n    _classCallCheck(this, AbsorberInstance);\n\n    var _a, _b, _c;\n\n    this.absorbers = absorbers;\n    this.container = container;\n    this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n\n    if (options instanceof Absorber_1.Absorber) {\n      this.options = options;\n    } else {\n      this.options = new Absorber_1.Absorber();\n      this.options.load(options);\n    }\n\n    this.dragging = false;\n    this.name = this.options.name;\n    this.opacity = this.options.opacity;\n    this.size = (0, NumberUtils_1.getRangeValue)(this.options.size.value) * container.retina.pixelRatio;\n    this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n    var limit = this.options.size.limit;\n    this.limit = {\n      radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n      mass: limit.mass\n    };\n    this.color = (_a = (0, ColorUtils_1.colorToRgb)(this.options.color)) !== null && _a !== void 0 ? _a : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n  }\n\n  _createClass(AbsorberInstance, [{\n    key: \"attract\",\n    value: function attract(particle) {\n      var container = this.container,\n          options = this.options;\n\n      if (options.draggable) {\n        var mouse = container.interactivity.mouse;\n\n        if (mouse.clicking && mouse.downPosition) {\n          var mouseDist = (0, NumberUtils_1.getDistance)(this.position, mouse.downPosition);\n\n          if (mouseDist <= this.size) {\n            this.dragging = true;\n          }\n        } else {\n          this.dragging = false;\n        }\n\n        if (this.dragging && mouse.position) {\n          this.position.x = mouse.position.x;\n          this.position.y = mouse.position.y;\n        }\n      }\n\n      var pos = particle.getPosition(),\n          _ref = (0, NumberUtils_1.getDistances)(this.position, pos),\n          dx = _ref.dx,\n          dy = _ref.dy,\n          distance = _ref.distance,\n          v = Vector_1.Vector.create(dx, dy);\n\n      v.length = this.mass / Math.pow(distance, 2) * container.retina.reduceFactor;\n\n      if (distance < this.size + particle.getRadius()) {\n        var sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n\n        if (this.size > particle.getRadius() && distance < this.size - particle.getRadius() || particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0) {\n          if (options.destroy) {\n            particle.destroy();\n          } else {\n            particle.needsNewPosition = true;\n            this.updateParticlePosition(particle, v);\n          }\n        } else {\n          if (options.destroy) {\n            particle.size.value -= sizeFactor;\n          }\n\n          this.updateParticlePosition(particle, v);\n        }\n\n        if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n          this.size += sizeFactor;\n        }\n\n        if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n          this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n        }\n      } else {\n        this.updateParticlePosition(particle, v);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var initialPosition = this.initialPosition;\n      this.position = initialPosition && (0, Utils_1.isPointInside)(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      context.translate(this.position.x, this.position.y);\n      context.beginPath();\n      context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n      context.closePath();\n      context.fillStyle = (0, ColorUtils_1.getStyleFromRgb)(this.color, this.opacity);\n      context.fill();\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition() {\n      var exactPosition = (0, NumberUtils_1.calcPositionOrRandomFromSizeRanged)({\n        size: this.container.canvas.size,\n        position: this.options.position\n      });\n      return Vector_1.Vector.create(exactPosition.x, exactPosition.y);\n    }\n  }, {\n    key: \"updateParticlePosition\",\n    value: function updateParticlePosition(particle, v) {\n      var _a;\n\n      if (particle.destroyed) {\n        return;\n      }\n\n      var container = this.container,\n          canvasSize = container.canvas.size;\n\n      if (particle.needsNewPosition) {\n        var newPosition = (0, NumberUtils_1.calcPositionOrRandomFromSize)({\n          size: canvasSize\n        });\n        particle.position.setTo(newPosition);\n        particle.velocity.setTo(particle.initialVelocity);\n        particle.absorberOrbit = undefined;\n        particle.needsNewPosition = false;\n      }\n\n      if (this.options.orbits) {\n        if (particle.absorberOrbit === undefined) {\n          particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n          particle.absorberOrbit.length = (0, NumberUtils_1.getDistance)(particle.getPosition(), this.position);\n          particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n        }\n\n        if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n          var minSize = Math.min(canvasSize.width, canvasSize.height);\n          particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n        }\n\n        if (particle.absorberOrbitDirection === undefined) {\n          particle.absorberOrbitDirection = particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n        }\n\n        var orbitRadius = particle.absorberOrbit.length,\n            orbitAngle = particle.absorberOrbit.angle,\n            orbitDirection = particle.absorberOrbitDirection;\n        particle.velocity.setTo(Vector_1.Vector.origin);\n        var updateFunc = {\n          x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n          y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos\n        };\n        particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n        particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n        particle.absorberOrbit.length -= v.length;\n        particle.absorberOrbit.angle += ((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio / 100 * container.retina.reduceFactor;\n      } else {\n        var addV = Vector_1.Vector.origin;\n        addV.length = v.length;\n        addV.angle = v.angle;\n        particle.velocity.addTo(addV);\n      }\n    }\n  }]);\n\n  return AbsorberInstance;\n}();\n\nexports.AbsorberInstance = AbsorberInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","AbsorberInstance","NumberUtils_1","require","ColorUtils_1","Absorber_1","Vector_1","Utils_1","absorbers","container","options","position","_a","_b","_c","initialPosition","Vector","create","x","y","undefined","Absorber","load","dragging","name","opacity","size","getRangeValue","retina","pixelRatio","mass","density","reduceFactor","limit","radius","color","colorToRgb","b","g","r","copy","calcPosition","particle","draggable","mouse","interactivity","clicking","downPosition","mouseDist","getDistance","pos","getPosition","getDistances","dx","dy","distance","v","length","Math","pow","getRadius","sizeFactor","absorberOrbit","destroy","needsNewPosition","updateParticlePosition","isPointInside","canvas","context","translate","beginPath","arc","PI","closePath","fillStyle","getStyleFromRgb","fill","exactPosition","calcPositionOrRandomFromSizeRanged","destroyed","canvasSize","newPosition","calcPositionOrRandomFromSize","setTo","velocity","initialVelocity","orbits","angle","random","minSize","min","width","height","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","origin","updateFunc","cos","sin","moveSpeed","addV","addTo"],"sources":["/Users/alielalaoui/Documents/Udemy/Web_Dev_bootcamp/My_Website/my_edit/my_edit/portfolio/node_modules/tsparticles/cjs/Plugins/Absorbers/AbsorberInstance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nconst ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nconst Vector_1 = require(\"../../Core/Utils/Vector\");\nconst Utils_1 = require(\"../../Utils/Utils\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber_1.Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber_1.Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = (0, NumberUtils_1.getRangeValue)(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = (0, ColorUtils_1.colorToRgb)(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = (0, NumberUtils_1.getDistance)(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = (0, NumberUtils_1.getDistances)(this.position, pos), v = Vector_1.Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && (0, Utils_1.isPointInside)(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = (0, ColorUtils_1.getStyleFromRgb)(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        const exactPosition = (0, NumberUtils_1.calcPositionOrRandomFromSizeRanged)({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector_1.Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = (0, NumberUtils_1.calcPositionOrRandomFromSize)({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n                particle.absorberOrbit.length = (0, NumberUtils_1.getDistance)(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector_1.Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector_1.Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}